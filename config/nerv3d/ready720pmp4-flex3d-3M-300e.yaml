name: 720pMP4-Flex3D-2.67M-300e

dataset:
  type: VideoDataset

  args:
    data_path: "data/ready.mp4"
    frame_interval: 4 
    crop_size: (720, 1280)

dataloader:
  type: build_dataloader

  args:
    name: "uvghd30"
    data_path: "data/ready.mp4"
    frame_interval: 4 
    crop_size: (720, 1280)

    batch_size: 3
    shuffle: False
    num_workers: 0

model:
  type: HNeRVMae

  img_size: (720, 1280)
  frame_interval: 4       #dataset.args['frame_interval']
  
  embed_dim: 8 
  embed_size: (9, 16)
  decode_dim: 92

  lower_kernel: 1
  upper_kernel: 5
  scales: [5, 4, 2, 2]
  reduce: 3

  lower_width: 6


optimizer:
  type: Adam

  args: 
    learning_rate: 1e-3 
    beta1: 0.9
    beta2: 0.99

lr_scheduler:
  type: CosineAnnealingLR

  args:
    step_size: 10000
    eta_min: 1e-6

trainer:
  type: Trainer

  resume: False 
  
  epochs: 300
  save_dir: saved/
  save_period: 100
  verbosity: 1

  monitor: "min val_loss"
  early_stop: 10,

  visual_tool: wandb
  project: nerv3d
  api_key_file: ./configs/api/tuanlda78202
  entity: tuanlda78202
  name: "ready720pMP4-Flex3D-2.67M-300e"              # MUST_CHANGE


eval: 
  eval_only: False
  eval_freq: 10 # evaluation frequency
  eval_fps: False # fwd multiple times to test the fps

  quant_model_bit: 8 # bit length for model quantization
  quant_embed_bit: 6 # bit length for embedding quantization
  quant_axis: 0     # quantization axis (-1 means per tensor)

  dump_images: False # dump the prediction images
  dump_videos: False # concat the prediction images into video

  encoder_file: ""  # specify the embedding file


log: 
  # logging, output directory
  debug: False # defbug status, earlier for train/eval
  print-freq: 50 

  weight: None # pre-trained weights for ininitialization
  overwrite: False # overwrite the output dir if already exists

  outf: unify # folder to output images and model checkpoints
  suffix: "" # suffix str for outf


